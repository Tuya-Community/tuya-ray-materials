import { decodePath } from '.';

describe('decodePath', () => {
  test('basic usage', () => {
    const result = decodePath(
      '0000000003000003bf01570000000c0004000c0002000c0002000d00020031001a003700240039002600350028000d002cfffb003affeb004cffe5005cfff90038000f0020000d0020000d0020000d0020000b0020000d001e000b001e000d001e000c001e000c002cffee0048ffe4005cffe00070ffe00086ffec00a6fff600b2000e00c4002a00cc003200cc003c00e0003e0108003e010e0038011000320114002a0118002601220026012c00280138003601500032014c001a0152fff20152ffca0152ffa20152ff9e0154ff9e014cffa8012cffa80124ffa20116ff96010aff8a0102ff7800fcff7400feff5e00eeff4e00eaff3000ecff0800f2fede00f2feb600f0fea000f2fe9e00e8fe9c00e0fe9800dcfe8e00d6fe8000d4fe7200d6fe6000defe5000eafe4c00eafe3800e4fe1000e8fde800eefdda00f0fdd600e6fdcc00e2fdc200e0fdb200e2fd8a00ecfd7800f2fd6c00fcfd5c010efd340110fd0a0110fce20112fcca0116fcc40118fcba011efcaa010efc9a0106fc8a00fafc7c00f2fc7600d4fc7600aafc740082fc74005afc720048fc6a0038fc640032fc54002cfc3e0028fc380028fc280030fc100042fbe8004afbc00052fb980058fb700060fb46006afb1e0070faf80076fad0007cfabe007cfada0074fae0006efae80060faec0052faea0046fae60036fae2002efad40026fac40022fac80020faca000efac8000afad40000faf0fffefb04fff6fb10fffcfb1e0000fb2c0000fb34fffcfb42fff4fb4effe4fb52ffd4fb56ffaafb58ff9afb6aff84fb76ff72fb78ff5cfb78ff54fb92ff52fbbcff54fbe4ff54fbf8ff54fc04ff62fc16ff6cfc2aff70fc52ff6efc7aff6efca4ff70fcccff70fcf4ff6efd10ff66fd38ff68fd60ff62fd88ff5efdb0ff5efdd8ff5cfe00ff5cfe2aff56fe52ff54fe7aff52fe8cff4efe96ff44fe9cff3afec4ff3afeecff3aff04ff38ff08ff3eff0eff46ff14ff4cff24ff54ff40ff58ff6aff54ff6eff7cff70ffa2ff74ffaeff7effbcff8effc4ff9cffc8ffc4ffc4ffecffc2000cffc2000cffea000a0012000c001e000a001e000a001e000b001e0007002200010022fffd0020fff7001efff5001efff5001efff5001efff5001efff5001efff5001efff4001efdec001efdeefff6fdf2ffcefdf4ffc0fdccffc0fda4ffc0fd7cffbefd52ffc0fd2affc0fd02ffc0fcdaffc0fcb2ffc0fcaaffc0fcaaffe8fcaa0010fcaa0038fcaa0060fcaa008afcaa00b2fcaa00c2fcd200c2fcfc00c0fd2400c0fd4c00c0fd7400c0fd9c00c2fdc600c2fdee00c2fe1400bafe3400acfe500094fe600074fe680052fe68004afe720046fe760042fe7a003efe7c0038fe7c0032fe78002efe740028fe6e0024fe6a0022fe620024fe5e0026fe58002afe56002efe520034fe54003afe560040fe5a0044fe600046fe600048fe600048fe5e0048fe5e0048fe600048fe600048fe60004afe5e0048fe5f0048fe370044fe0f003efdef003cfdf1003cfdef003efdef003cfdee003cfdee0014fdf0000cfdf0000cfdf0000cfdf0000cfdf0000cfdf0000cfdf0000cfdf1000cfdf9001afdfd0024fdff002afdfd0032fdf7003cfdf7003cfdf7003cfdf7003cfdf7003cfdf7003cfdf7003cfdf7003cfdf7003cfdf7003cfdf6003cfe3c003cfe3c003cfe40003cfe44003efe480042fe4a0046fe4a004afe4a004efe480052fe440056fe400058fe3c005afdec005afdee0030fdec002cfdec002cfdee002efdec002cfdee002cfdee002cfdee002cfdef002cfe01003efe070048fe070052fe05005cfdfd006afdf50072fdef0076fdf10074fdef0074fdf10076fdf10074fdef0074fdef0074fdee0074fdf0004cfdf00024fdf2fffcfdf2ffd4fdf2ffcefdf2ffccfdf2ffccfdf2ffcefdf2ffcefdf2ffcefdf2ffcefdf2ffccfdf3ffccfe05fff2fe0d0018fe0f0042fe07005cfdfb0074fdf70078fdf70078fdf70078fdf70078fdf70078fdf70078fdf70078fdf70078fdf70078fdf70078fdf70078fdf60078fe460078fe320096fdec0094fdec0076fdee0076fdec0076fdec0074fdec0074fdea0076fdec0076fdec0074fded0074fe070094fe2500b0fe4700c8fe6500d2fe6500d2fe6500d2fe6500d2fe6500d2fe6500d2fe6500d2fe6500d2fe6500d2fe6500d2fe6500d2fe6500d2fe6500d2fe6400d2fc8400d2fc9400f0fd5c00f0fd5c00f0fd5c00f0fd5c00f0fd5c00f0fd5c00f0fd5c00f0fd5c00f0fd5c00f0fd5c00f0fd5d00f0fd3700f2fd0f00f6fced00fefcd5010efcd5010efcd5010efcd5010efcd5010efcd5010efcd4010efcc0010efcc0010efcc0010efcc1010efcb70100fcab00eafca100c4fca300b4fca300b4fca300b4fca300b4fca300b4fca300b4fca300b4fca300b4fca200b4fc8e00b4fc8e00b4fc8a00b2fc8400b0fc8200acfc8000a8fc7e00a4fc8000a0fc82009cfc860098fc8a0096fc8e0096fc980096fc980094fc9e0094fca20090fca4008efca6008afca60084fca60080fca2007cfca0007afc980078fc840078fc820076fc7e0076fc7a0074fc760070fc76006cfc740068fc760062fc78005efc7c005cfc80005afc84005afc98005afc98005afc9c0058fca00056fca40052fca6004efca6004afca60046fca40042fca0003efc9c003cfc98003cfc7a003cfca4001efae2001efae2001efae2001efae2001efae2001efae2001efae2001efae2001efae3001efaf5003cfaf5003cfaf5003cfaf5003cfaf5003cfaf5003cfaf5003cfaf4003cfc02003cfc02003cfc02003cfc02003cfc02003cfc02003cfc03003cfc030014fc030000fc030000fc030000fc030000fc030000fc030000fc030000fc030000fc020000fca20000fb440000fb54ffe2fc94ffe2fc94ffe2fc9affe2fc9effdefca2ffdcfca4ffd8fca4ffd2fca4ffcefca2ffcafc9effc6fc9affc4fc94ffc4fb68ffc4fb68ffc4fb64ffc4fb60ffc2fb5effbefb5affbafb5affb6fb5affb0fb5cffacfb60ffaafb64ffa6fb68ffa6ff64ffa6ff76ffc4fe04ffc4fe04ffc4fe00ffc4fdfcffc6fdf8ffcafdf6ffcefdf6ffd2fdf6ffd8fdf8ffdcfdfcffdefe00ffe0fe04ffe2ffeeffe2ffeeffe2ffeeffe2ffeeffe2ffeeffe2ffeeffe2ffeeffe2ffeeffe2ffeeffe2ffeeffe2ffeeffe2ffefffe2ffe3ffe2ffd9ffe6ffd5ffecffd3fff4ffd3fff8ffd70000ffd70000ffd70000ffd70000ffd70000ffd70000ffd70000ffd70000ffd70000ffd70000ffd60000fe000000fe000000fe000000fe000000fe000000fe000000fe000000fe000000fe010000fe19ffdefe1fffccfe1fffc4fe1fffc4fe1fffc4fe1fffc4fe1fffc4fe1fffc4fe1fffc4fe1fffc4fe1fffc4fe1effc4ff5effc4ff5effc4ff5effc4ff5effc4ff5effc4ff5effc4ff5fffc4ff5bff9cff61ff8eff69ff88ff69ff88ff69ff88ff69ff88ff69ff88ff69ff88ff69ff88ff69ff88ff69ff88ff69ff88ff69ff88ff68ff88fb8aff88fb8aff88fb86ff88fb82ff86fb7eff82fb7cff7efb7aff7afb7cff74fb7eff70fb80ff6efb84ff6afb8aff6afbf8ff6afbf8ff6afbf8ff6afbf8ff6afbf8ff6afbf8ff6afbf8ff6afbf8ff6afbf9ff6afbdfff86fbc1ffa2fba5ffbefb8bffdefb7dfffefb770026fb75004efb77005afb77005afb77005afb77005afb77005afb77005afb77005afb77005afb77005afb76005afaf4005afaf4005afaf4005afaf4005afaf4005afaf4005afaf4005afaf4005afaf5005afb11003cfb2f001efb4d0002fb69ffe6fb89ffccfbafffbefbd1ffb8fbdbffb0fbebffa4fc01ff9afc2bff96fc53ff98fc7bff96fca3ff94fccdff90fcf5ff8cfd1dff84fd3bff76fd4dff6afd4dff6afd4dff6afd4dff6afd4dff6afd4dff6afd4cff6aff5eff6aff5eff6aff5eff6aff5eff6aff5eff6aff5eff6aff5eff6aff5eff6aff5eff6aff5eff6aff5fff6aff3bff72ff2dff70ff1fff68ff15ff60ff11ff56ff0fff4cff0fff4cff0fff4cff0fff4cff0fff4cff0fff4cff0fff4cff0fff4cff0eff4cfea0ff4cfea0ff4cfea0ff4cfea0ff4cfea0ff4cfea0ff4cfea1ff4cfea1ff74fe9dff90fe91ffb8fe89ffdefe850006fe83002efe83003cfe83003cfe83003cfe83003cfe83003cfe83003cfe83003cfe83003cfe83003cfe82003cffd6003cffd6003cffda003cffde003effe20042ffe40046ffe4004affe4004effe20054ffde0056ffda0058ffd6005afe78005afe78005afe74005afe70005cfe6c0060fe6a0064fe680068fe6a006cfe6c0070fe6e0074fe720076fe780078ffcc0078ffcc0078ffd00078ffd4007affd8007effda0082ffda0088ffda008cffd80090ffd40092ffcc0096fe5a0096fe3c00b4ffe000b4002400d2fea000d2fea000d2fea000d2fea000d2fea000d2fea000d2fea000d2fea000d2fea000d2fea000d2fea000d2fea100d2fed300d2fefb00d2ff2300d2ff4d00d4ff5f00daff6b00e2ff7300f0ff7300f0ff7300f0ff7300f0ff7300f0ff7300f0ff7300f0ff7200f0002400f0002400f0002a00f0002e00f2003000f6003200fa003400fe0034010200320106002e010a002a010c0024010effb8010effb8010effb2010effae0110ffaa0114ffa80118ffa8011effaa0122ffac0126ffb00128ffb8012c0010012c0010012c0016012c001a012e001c0132001e01360020013a001e013e001c0142001a0146001401480010014affb8014affb8014affb8014affb8014affb8014affb8014affb9014affb70120ffb30108ffa100e8ff8500ccff6700aeff490092ff2d0076ff0f005afef3003efed50022feb90004fe9bffe8fe7fffccfe69ffbafe4dffb0fe25ffaafdfbffacfdd3ffaefdabffaefd83ffaefd59ffaefd31ffaefd09ffacfce1ffacfcb7ffacfc8fffaafc67ffaafc3dffaafc15ffa8fbedffa6fbc3ffa6fb9bffa6fb71ffa6fb53ffa8fb6fffa6fb97ffa6fbc1ffa6fbe9ffa6fc11ffa4fc39ffa2fc61ff9efc89ff9afcb3ff98fcdbff92fd03ff8cfd2bff86fd53ff86fd7bff86fda5ff88fdcdff88fdf7ff88fe1fff88fe49ff86fe6fff7afe93ff68fea7ff56feafff48feb1ff3cfeb1ff32feadff28fea7ff20fea1ff1afea1ff1afea0ff1afe9cff0cfe94ff04febeff00fee6ff00ff0efefeff38fefcff4efefcff4afefeff2efefcff26ff00ff14ff06ff0eff0cff08ff1aff08ff24fedeff26feb6ff24fea4ff24fe9aff0cfe98ff0efe98ff0cfe98ff0cfe98ff0cfe9aff0cfe98ff0efe9aff0efe9aff0cfe9aff0dfeb2ff2dfeceff4bfeeaff67ff08ff85ff24ffa1ff42ffbdff60ffd7ff84ffe5ffaaffedffc8ffefffb6ffd9ffc8ffd9ffd4ffd7fffaffe10020ffeb002cffef002dffee002dffee'
    );

    expect(result.pathHeader).toEqual({
      version: 0,
      pathId: 0,
      initFlag: 0,
      type: 3,
      count: 959,
      direction: 343,
      dataLengthAfterCompress: 0,
    });

    expect(result.pathPoints[result.pathPoints.length - 1]).toEqual({
      x: 4.4,
      y: 1.7,
      type: 'charge',
    });
  });

  test('lz4', () => {
    const result = decodePath(
      '00002c00010000002a0000008be34e1e4e1f000000150000008dffa6040051920083ff8804005165ff9c005b040093a60051ffba0047ffce0400b3e20033fff6001f000afff7040013a70400d1930000ff7ffff6ff6bffe2ff570400f108ceff43ffc4ff43ffbaff39ff9cff43ff92ff57ff88ff610800117e0c005143ffa6ff2f200013ce0400f000ecff39fff6ff7ffff6ff750000ff7f'
    );

    expect(result.pathHeader).toEqual({
      version: 0,
      pathId: 44,
      initFlag: 0,
      type: 1,
      count: 42,
      direction: 0,
      dataLengthAfterCompress: 139,
    });

    expect(result.pathPoints[result.pathPoints.length - 1]).toEqual({
      x: 0,
      y: 12.9,
      type: 'transitions',
    });
  });
});
